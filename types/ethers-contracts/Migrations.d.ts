/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MigrationsInterface extends ethers.utils.Interface {
  functions: {
    "last_completed_migration()": FunctionFragment;
    "owner()": FunctionFragment;
    "setCompleted(uint256)": FunctionFragment;
    "upgrade(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "last_completed_migration",
    values?: void
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: void): string;
  encodeFunctionData(
    functionFragment: "setCompleted",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "upgrade", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "last_completed_migration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setCompleted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "upgrade", data: BytesLike): Result;

  events: {};
}

export class Migrations extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MigrationsInterface;

  functions: {
    last_completed_migration(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    owner(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setCompleted(
      completed: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    upgrade(
      new_address: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  last_completed_migration(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  setCompleted(
    completed: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  upgrade(
    new_address: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  staticCall: {
    last_completed_migration(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    setCompleted(completed: BigNumberish, overrides?: Overrides): Promise<void>;

    upgrade(new_address: string, overrides?: Overrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    last_completed_migration(): Promise<BigNumber>;
    owner(): Promise<BigNumber>;
    setCompleted(completed: BigNumberish): Promise<BigNumber>;
    upgrade(new_address: string): Promise<BigNumber>;
  };

  populateTransaction: {
    last_completed_migration(): Promise<PopulatedTransaction>;
    owner(): Promise<PopulatedTransaction>;
    setCompleted(completed: BigNumberish): Promise<PopulatedTransaction>;
    upgrade(new_address: string): Promise<PopulatedTransaction>;
  };
}
