/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { Contract, ContractOptions, EventOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { Callback, ContractEvent, TransactionObject } from "./types";

export class TimelockInterface extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): TimelockInterface;
  methods: {
    delay(): TransactionObject<BN>;

    GRACE_PERIOD(): TransactionObject<BN>;

    acceptAdmin(): TransactionObject<void>;

    queuedTransactions(hash: string | number[]): TransactionObject<boolean>;

    queueTransaction(
      target: string,
      value: number | string,
      signature: string,
      data: string | number[],
      eta: number | string
    ): TransactionObject<string>;

    cancelTransaction(
      target: string,
      value: number | string,
      signature: string,
      data: string | number[],
      eta: number | string
    ): TransactionObject<void>;

    executeTransaction(
      target: string,
      value: number | string,
      signature: string,
      data: string | number[],
      eta: number | string
    ): TransactionObject<string>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
